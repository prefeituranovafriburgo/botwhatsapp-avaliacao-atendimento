import { salvarAvalicao } from "./functions.js";
import venom from "venom-bot";

venom
    .create({
        session: "avaliacao-atendimento", // Nome da sess√£o
        browserArgs: [
            "--headless=new", // <-- aqui voc√™ passa a flag que for√ßa o novo modo headless
        ],
    })
    .then((client) => start(client))
    .catch((erro) => {
        console.log(erro);
    });

// Objeto para armazenar o estado de cada cliente
const clientes = {};

function start(client) {
    let ultimaMensagemId = null;

    try {
        client.onAnyMessage(async (message) => {
            // Identifica o n√∫mero do cliente (pode ser message.to ou message.from dependendo do contexto)
            const numero = message.to;
            if (
                message.fromMe &&
                (message.body.toLowerCase().trim() === "atendimento encerrado!" ||
                message.body.toLowerCase().trim() === "atendimento finalizado!" ||
                message.body.toLowerCase().trim() === "fim do atendimento!" ||
                message.body.toLowerCase().trim() === "finalizando atendimento!") &&
                message.id !== ultimaMensagemId
            ){
                // Inicializa ou reseta o estado do cliente
                clientes[numero] = {
                    is_avaliado: false,
                    is_avisado: false,
                    nota_avaliacao: null,
                    nome: null
                };
                ultimaMensagemId = message.id;

                await client.sendText(
                    numero,
                    "üèõÔ∏è *Prefeitura de Nova Friburgo* üèõÔ∏è\n\nAgradecemos o seu contato.\nPara aperfei√ßoarmos continuamente a qualidade dos nossos servi√ßos, nos ajude com sua opini√£o sobre o atendimento recebido.\n\nüìã *Pesquisa de Satisfa√ß√£o - Atendimento* üìã\n\nPor gentileza, informe o n√∫mero correspondente √† sua percep√ß√£o:\n\n1Ô∏è‚É£ *Satisfeito*\n2Ô∏è‚É£ *Neutro*\n3Ô∏è‚É£ *Insatisfeito*\n\nA sua avalia√ß√£o √© fundamental para o nosso processo de melhoria cont√≠nua.\nDesde j√°, agradecemos!"
                );

                clientes[numero].is_avisado = true;
            }
        });

    } catch (error) {
        console.error("Erro ao processar a mensagem:", error);
    }

    client.onMessage(async (message) => {
        try {
            const numero = message.from;
            // Garante que o estado do cliente existe
            if (!clientes[numero]) return;
            const estado = clientes[numero];

            if (
                estado.is_avaliado === false &&
                estado.is_avisado === true &&
                !message.fromMe
            ) {
                const respostaCliente = message.body.trim();
                let resposta;
                switch (respostaCliente) {
                    case "1":
                        resposta =
                            "‚ùáÔ∏è *Avalia√ß√£o positiva!*\nFicamos felizes em saber que sua experi√™ncia foi satisfat√≥ria.\nPor favor, para finalizar o registro da sua avalia√ß√£o, nos conte o que mais gostou no nosso atendimento! Isso nos ajuda a continuar oferecendo um servi√ßo de qualidade.";
                        estado.is_avaliado = true;
                        estado.nota_avaliacao = 1;
                        break;

                    case "2":
                        resposta =
                            "‚ö†Ô∏è *Avalia√ß√£o neutra!*\nEstamos sempre em busca de melhorias.\nPor favor, para finalizar o registro da sua avalia√ß√£o, nos conte o que podemos aperfei√ßoar no atendimento! Seu feedback nos ajuda a melhorar nossos servi√ßos.";
                        estado.is_avaliado = true;
                        estado.nota_avaliacao = 2;
                        break;

                    case "3":
                        resposta =
                            "‚ÄºÔ∏è *Avalia√ß√£o negativa. Lamentamos que sua experi√™ncia n√£o tenha sido positiva.*\nPor favor, para finalizar o registro da sua avalia√ß√£o e entender melhor o ocorrido, poderia nos explicar o que aconteceu? Seu relato √© fundamental para melhorarmos nosso atendimento.";
                        estado.is_avaliado = true;
                        estado.nota_avaliacao = 3;
                        break;

                    default:
                        resposta =
                            "‚ö†Ô∏è *Op√ß√£o inv√°lida.*\nPor gentileza, responda com um dos n√∫meros a seguir:\n\n1Ô∏è‚É£ Satisfeito\n2Ô∏è‚É£ Neutro\n3Ô∏è‚É£ Insatisfeito\n Assim, podemos proceder com o registro da sua avalia√ß√£o.";
                }

                await client.sendText(numero, resposta);
                
            } else if (
                estado.is_avaliado === true &&
                estado.is_avisado === true &&
                !message.fromMe
            ) {
                estado.nome = message.sender.pushname || "Usu√°rio";
                const respostaCliente = message.body.trim();
                let resposta;
                resposta = "‚úÖ *Sua avalia√ß√£o foi armazenada com sucesso!.*\nEstamos sempre √† disposi√ß√£o para atend√™-lo da melhor forma poss√≠vel.\n\nAgradecemos pela sua participa√ß√£o! üôè\n\nCaso tenha mais alguma d√∫vida ou precise de ajuda, n√£o hesite em nos contatar novamente.\n\nüèõÔ∏è *Prefeitura de Nova Friburgo* üèõÔ∏è";
                salvarAvalicao(estado.nome, numero, estado.nota_avaliacao, respostaCliente);

                await client.sendText(numero, resposta);

                // Reseta o estado do cliente ap√≥s finalizar
                clientes[numero] = {
                    is_avaliado: false,
                    is_avisado: false,
                    nota_avaliacao: null,
                    nome: null
                };
            }

        } catch (error) {
            console.error("Erro ao processar a mensagem:", error);
        }
    });
}
